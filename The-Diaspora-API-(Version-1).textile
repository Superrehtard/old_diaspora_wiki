**I ("Dennis Schubert (@denschub)":https://github.com/denschub) am working at this document right now. Please wait until I've fully inserted my drafts - should be done until the end of the day. :-)**

This is a draft for designing Diaspora's API version 1. This is neither complete nor correct, it's just a collection of ideas.

h2. General notes

We want to use as much already existing standards as possible, so we decided to use "JSON Activity Streams":http://activitystrea.ms/specs/json/1.0/ for everything related with streams and messages and "Portable Contacts":http://portablecontacts.net/draft-spec.html for everything regarding profiles.

h2. Authentication

In this first version we are going to use http basic auth until OAuth is fully implemented and tested. Devise supports http basic auth and that's easy to enable.

h2. Stream

h3. GET /stream

Returns a JSON of the stream items. (ActivityStreams)

h4. Parameters

no parameters

h4. Example

bc. GET /contacts
{
  "contacts": [
    {
      "id": "23",
      "displayName": "John Doe"
    },
    {
      "id": "42",
      "displayName": "Jane Doe"
    }
  ]
}

h2. Posts

h3. GET /post/[post]

Returnsa JSON containing the requested post. (ActivityStreams)

h4. Parameters

* **post**: The post ID

h4. Example

bc. GET /posts/456
{
  "id": "456",
  "published": "2011-02-10T15:04:55Z",
  "actor": {
    "id": "42",
    "displayName": "Jane Doe",
    "name": "Jane Doe",
    "nickname": "jane@pod.example.org",
    "preferredUsername": "jane",
    "birthday": "1975-02-14",
    "gender": "who knows",
    "note": "Janes profile description"
    "picture": "http://example.com/uploads/images/foo.png"
  },
  "verb": "post",
  "object": {
    "content": "Hello, epic Diasporaverse"
  }
}

h2. Conversations

h3. GET /conversations

Returns a JSON containing all conversations. (extended ActivitySreams)

h4. Parameters

none

h4. Example

bc. GET /conversations
{
  "conversations": [
    {
      "id": "123",
      "subject": "Hello, you",
      "created_at": "2011-02-10T15:04:55Z",
      "updated_at": "2011-02-10T15:04:55Z",
      "lastAuthor": {
        "id": "42",
        "displayName": "Jane Doe",
        "name": "Jane Doe",
        "nickname": "jane@pod.example.org",
        "preferredUsername": "jane",
        "birthday": "1975-02-14",
        "gender": "who knows",
        "note": "Janes profile description",
        "picture": "http://example.com/uploads/images/foo.png"
      }
    },
    {
      "id": "456",
      "subject": "BugBug!",
      "created_at": "2011-02-10T15:04:55Z",
      "updated_at": "2011-02-10T15:04:55Z",
      "lastAuthor": {
        "id": "23",
        "displayName": "John Doe",
        "name": "John Doe",
        "nickname": "John@pod.example.org",
        "preferredUsername": "John",
        "birthday": "1975-02-14",
        "gender": "who knows",
        "note": "John profile description",
        "picture": "http://example.com/uploads/images/foo.png"
      }
    }
  ]
}

h3. GET /conversation/[conversation]

Returns a JSON (ActivityStreams) containing all messages of the given conversation

h4. Parameters

* **conversation**: the id of a conversation

h4. Example

See *GET /stream*, this will look similar.